{"version":3,"file":"static/js/663.dd66c518.chunk.js","mappings":"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","sources":["pages/dashboard/GetStartedProcess.jsx","pages/dashboard/QProcess.jsx","pages/dashboard/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Stack,\n  Box,\n  Typography,\n  FormControlLabel,\n  FormLabel,\n  Card,\n  Grid,\n  Modal,\n  FormControl,\n  Radio,\n  RadioGroup,\n  Select,\n  MenuItem,\n  InputLabel,\n  Paper,\n  IconButton,\n  InputBase,\n  Divider\n} from '@mui/material';\nimport { useSelector } from 'react-redux';\nimport { LoadingButton } from '@mui/lab';\nimport { startSessions } from 'api/app';\nimport { toast } from 'react-toastify';\nimport { GoLaw } from 'react-icons/go';\nimport { MdEngineering } from 'react-icons/md';\nimport { MdOutlineScience } from 'react-icons/md';\nimport { BiSolidBusiness } from 'react-icons/bi';\nimport { SearchOutlined } from '@ant-design/icons';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  minHeight: 250,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nconst icons = {\n  law: <GoLaw style={{ fontSize: '40px' }} />,\n  business: <BiSolidBusiness style={{ fontSize: '40px' }} />,\n  science: <MdOutlineScience style={{ fontSize: '40px' }} />,\n  engineering: <MdEngineering style={{ fontSize: '40px' }} />\n};\n\nconst FacultyCard = ({ data, selected, onPress }) => (\n  <Stack alignItems={'center'}>\n    <Card\n      sx={{\n        p: 2,\n        borderWidth: 1,\n        minHeight: '100px',\n        width: '100px',\n        borderStyle: 'solid',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        flexDirection: 'column',\n        overflow: 'hidden',\n        borderRadius: '100%',\n        color: '#720307',\n        '&:hover': {\n          bgcolor: '#720307',\n          cursor: 'pointer',\n          color: 'white'\n        }\n      }}\n      onClick={onPress}\n    >\n      {icons[data?.icon]}\n    </Card>\n    <Typography variant=\"h4\" textAlign={'center'} mt={'4px'}>\n      {data?.name}\n    </Typography>\n  </Stack>\n);\n\nexport const GetStartedProcess = ({ user, onCompleted }) => {\n  const { faculties, departments, courses, years } = useSelector((state) => state.app);\n  const [departmentFilter, setDepartmentFilter] = useState([]);\n  const [courseFilter, setCourseFilter] = useState([]);\n\n  const [selectedFaculty, setSelectedFaculty] = useState(null);\n  const [selectedCourse, setSelectedCourse] = useState(null);\n\n  const [selectedDepartment, setSelectedDepartment] = useState(null);\n\n  const [isModalOpen, setIsModalOpen] = useState(false);\n\n  const [year, setYear] = useState('2024');\n  const [yearOfStudy, setYearOfStudy] = useState('1');\n  const [semester, setSemester] = useState(1);\n  const [intake, setIntake] = useState('JAN');\n  const [loading, setLoading] = useState(false);\n\n  const handleSetFaculty = (faculty) => {\n    setSelectedFaculty(faculty);\n\n    const filteredDepartment = departments.filter((department) => department?.faculty?.id === faculty?.id);\n    setDepartmentFilter(filteredDepartment);\n    setIsModalOpen(true);\n  };\n\n  const handleSetDepartment = (department) => {\n    setSelectedDepartment(department);\n    const filteredCourses = courses.filter((course) => course?.department?.id === department?.id);\n    setCourseFilter(filteredCourses);\n  };\n\n  const handleSetupAISession = async () => {\n    setLoading(true);\n\n    const payload = {\n      course_id: selectedCourse?.id,\n      year: year,\n      semester: semester,\n      intake: intake,\n      year_of_study: yearOfStudy\n    };\n\n    const request = await startSessions(payload);\n    if (request.ok) {\n      onCompleted(request.data);\n      setLoading(false);\n      return;\n    }\n\n    setLoading(false);\n    toast.error('The selected course does not have any question paper');\n  };\n\n  return (\n    <Stack spacing={1} sx={{ minHeight: '70vh' }}>\n      <Box p={2} display={'flex'} justifyContent={'center'}>\n        <Paper component=\"form\" sx={{ p: '4px 6px', display: 'flex', alignItems: 'center', width: { xs: '100%', sm: '70%' } }}>\n          <InputBase sx={{ ml: 1, flex: 1 }} placeholder=\"Search for faculties...\" inputProps={{ 'aria-label': 'search google maps' }} />\n          <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n          <IconButton color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\n            <SearchOutlined />\n          </IconButton>\n        </Paper>\n      </Box>\n\n      <Typography textAlign={'center'} my={2} fontSize={20} px={20}>\n        Access and solve past school questions using AI-powered solutions and get accurate answers in real-time.\n      </Typography>\n\n      <Grid container spacing={3} width={'100%'}>\n        {faculties?.map((faculty) => (\n          <Grid item key={faculty.id} xs={12} sm={3}>\n            <FacultyCard data={faculty} selected={faculty?.id === selectedFaculty?.id} onPress={() => handleSetFaculty(faculty)} />\n          </Grid>\n        ))}\n      </Grid>\n\n      <Modal\n        open={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography id=\"modal-modal-title\" variant=\"h4\" component=\"h2\">\n            Select Department and Course\n          </Typography>\n          <Typography id=\"modal-modal-subtitle\" variant=\"body1\">\n            Please select the department and course you want to proceed with.\n          </Typography>\n          <Stack spacing={2} mt={2}>\n            <FormControl disabled={loading}>\n              <InputLabel id=\"select-department-label\">Select Department</InputLabel>\n              <Select\n                value={selectedDepartment?.id || ''}\n                onChange={(e) => {\n                  const department = departments.find((dep) => dep.id === e.target.value);\n                  handleSetDepartment(department);\n                }}\n                labelId=\"select-department-label\"\n                id=\"select-department\"\n                label=\"Select Department\"\n              >\n                {departmentFilter.map((department) => (\n                  <MenuItem key={department.id} value={department.id}>\n                    {department.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            <FormControl disabled={loading || !selectedDepartment}>\n              <InputLabel id=\"select-course-label\">Select Course</InputLabel>\n              <Select\n                value={selectedCourse?.id || ''}\n                onChange={(e) => {\n                  const course = courses.find((course) => course.id === e.target.value);\n                  setSelectedCourse(course);\n                }}\n                labelId=\"select-course-label\"\n                id=\"select-course\"\n                label=\"Select Course\"\n              >\n                {courseFilter.map((course) => (\n                  <MenuItem key={course.id} value={course.id}>\n                    {course.name}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl>\n            {/* <FormControl disabled={loading}>\n              <InputLabel id=\"select-year-label\">Select Year</InputLabel>\n              <Select\n                value={year}\n                onChange={(e) => setYear(e.target.value)}\n                labelId=\"select-year-label\"\n                id=\"select-year\"\n                label=\"Select Year\"\n                defaultValue={'2013'}\n              >\n                {years?.map((year) => (\n                  <MenuItem key={year} value={year}>\n                    {year}\n                  </MenuItem>\n                ))}\n              </Select>\n            </FormControl> */}\n\n            {/* <FormControl disabled={loading}>\n              <InputLabel id=\"select-year-label\">Year of Study</InputLabel>\n              <Select\n                value={yearOfStudy}\n                onChange={(e) => setYearOfStudy(e.target.value)}\n                labelId=\"select-year-label\"\n                id=\"select-year\"\n                label=\"Year of Study\"\n                defaultValue={'1'}\n              >\n                <MenuItem value={'1'}>1</MenuItem>\n                <MenuItem value={'2'}>2</MenuItem>\n                <MenuItem value={'3'}>3</MenuItem>\n                <MenuItem value={'4'}>4</MenuItem>\n              </Select>\n            </FormControl> */}\n\n            {/* <FormControl>\n              <FormLabel id=\"demo-row-radio-buttons-group-label\">INTAKE</FormLabel>\n              <RadioGroup\n                value={intake}\n                onChange={(e) => setIntake(e.target.value)}\n                row\n                aria-labelledby=\"demo-row-radio-buttons-group-label\"\n                name=\"row-radio-buttons-group\"\n              >\n                <FormControlLabel value=\"JAN\" control={<Radio />} label=\"JAN\" />\n                <FormControlLabel value=\"MAY\" control={<Radio />} label=\"MAY\" />\n                <FormControlLabel value=\"AUG\" control={<Radio />} label=\"AUG\" />\n              </RadioGroup>\n            </FormControl>\n            <FormControl disabled={loading}>\n              <InputLabel id=\"select-semester-label\">Select Semester</InputLabel>\n              <Select\n                labelId=\"select-semester-label\"\n                id=\"select-semester\"\n                label=\"Select Semester\"\n                value={semester}\n                onChange={(e) => setSemester(e.target.value)}\n              >\n                <MenuItem value={1}>First Semester</MenuItem>\n                <MenuItem value={2}>Second Semester</MenuItem>\n              </Select>\n            </FormControl> */}\n            <Stack direction={'row'} spacing={2}>\n              <LoadingButton disabled={loading} fullWidth variant=\"outlined\" onClick={() => setIsModalOpen(false)}>\n                Cancel\n              </LoadingButton>\n              <LoadingButton\n                loading={loading}\n                disabled={loading || !selectedCourse}\n                onClick={handleSetupAISession}\n                fullWidth\n                variant=\"contained\"\n              >\n                Continue\n              </LoadingButton>\n            </Stack>\n          </Stack>\n        </Box>\n      </Modal>\n    </Stack>\n  );\n};\n","import React, { useRef, useState } from 'react';\nimport { Stack, Typography, Button, Modal, Box, Paper, IconButton, InputBase, Divider, CircularProgress } from '@mui/material';\nimport { toast } from 'react-toastify';\nimport { BookOutlined, FileTextOutlined, SendOutlined } from '@ant-design/icons';\nimport { sendMessage } from 'api/app';\n\nconst style = {\n  position: 'absolute',\n  top: '50%',\n  left: '50%',\n  transform: 'translate(-50%, -50%)',\n  width: 400,\n  minHeight: 250,\n  bgcolor: 'background.paper',\n  border: '2px solid #000',\n  boxShadow: 24,\n  p: 4\n};\n\nconst preDefinePrompt = ['Quiz Me', 'Answer all the question'];\n\nexport const QProcess = ({ user, session }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  const scrollableContainerRef = useRef(null);\n\n  // Step 3: Function to scroll to the bottom\n  const scrollToBottom = () => {\n    if (scrollableContainerRef.current) {\n      scrollableContainerRef.current.scrollTop = scrollableContainerRef.current.scrollHeight;\n    }\n  };\n\n  const handleViewQuestionPaper = () => {\n    if (session?.question_paper?.document) {\n      window.open(session.question_paper.document, '_blank');\n    } else {\n      toast.error('Unable to open question paper');\n    }\n  };\n\n  const handleSendMessage = async (text) => {\n    setLoading(true);\n    const prompt = text || message;\n\n    if (!prompt) {\n      toast.error('Please type something');\n      setLoading(false);\n      return;\n    }\n\n    const payload = {\n      qsession_id: session?.id,\n      content: prompt\n    };\n    const request = await sendMessage(payload);\n    if (request.ok) {\n      setMessages(request.data);\n      scrollToBottom();\n      setLoading(false);\n      return;\n    }\n\n    setLoading(false);\n    const error = request.data?.detail || request.data?.message || 'Unable to complete the request please try again';\n    toast.error(error);\n  };\n\n  console.log(messages);\n\n  return (\n    <>\n      <Stack spacing={1} sx={{ minHeight: '75vh' }}>\n        <Stack direction={'row'} spacing={1}>\n          <Button onClick={handleViewQuestionPaper} variant=\"outlined\" startIcon={<FileTextOutlined />}>\n            View Question Paper\n          </Button>\n          <Button onClick={() => setIsModalOpen(true)} variant=\"outlined\" startIcon={<BookOutlined />}>\n            Course Detail\n          </Button>\n        </Stack>\n        <Stack sx={{ flex: 1, display: 'flex', flexDirection: 'column' }}>\n          <Stack ref={scrollableContainerRef} sx={{ flex: 1, overflowY: 'auto', flexBasis: 1, padding: 2 }}>\n            {messages.map((message) => (\n              <Stack key={message.id} spacing={1} my={1}>\n                <Stack sx={{ bgcolor: 'ActiveCaption', padding: 1, color: 'white' }}>\n                  <Typography sx={{ whiteSpace: 'pre-line' }}>{message?.content}</Typography>\n                </Stack>\n                <Stack sx={{ bgcolor: 'white', color: 'black', padding: 1 }}>\n                  <Typography sx={{ whiteSpace: 'pre-line' }}>{`${message?.ai_response}`}</Typography>\n                </Stack>\n              </Stack>\n            ))}\n          </Stack>\n\n          <Stack spacing={1}>\n            <Stack direction={'row'} spacing={1}>\n              {preDefinePrompt.map((prompt) => (\n                <Box\n                  onClick={() => handleSendMessage(prompt)}\n                  sx={{\n                    cursor: 'pointer',\n                    px: '15px',\n                    py: '2px',\n                    border: '1px solid gray',\n                    borderRadius: '20px',\n                    '&:hover': { backgroundColor: 'gray', color: 'white' }\n                  }}\n                  key={prompt}\n                >\n                  <Typography>{prompt}</Typography>\n                </Box>\n              ))}\n            </Stack>\n            <Paper component=\"form\" sx={{ p: '4px 4px', display: 'flex', alignItems: 'center', borderRadius: '50px' }}>\n              <InputBase\n                disabled={loading}\n                value={message}\n                onChange={(e) => setMessage(e.target.value)}\n                sx={{ ml: 1, flex: 1 }}\n                placeholder=\"Message...\"\n                inputProps={{ 'aria-label': 'chat with ai' }}\n              />\n              <Divider sx={{ height: 28, m: 0.5 }} orientation=\"vertical\" />\n              {loading ? (\n                <CircularProgress size={'20px'} />\n              ) : (\n                <IconButton onClick={() => handleSendMessage()} color=\"primary\" sx={{ p: '10px' }} aria-label=\"directions\">\n                  <SendOutlined />\n                </IconButton>\n              )}\n            </Paper>\n          </Stack>\n        </Stack>\n      </Stack>\n      <Modal\n        open={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        aria-labelledby=\"modal-modal-title\"\n        aria-describedby=\"modal-modal-description\"\n      >\n        <Box sx={style}>\n          <Typography variant=\"h4\">Course Detail</Typography>\n          <Stack mt={2} direction={'row'} justifyContent={'space-between'}>\n            <Typography>Course name</Typography>\n            <Typography fontWeight={'bold'}>{session?.question_paper?.course?.name}</Typography>\n          </Stack>\n          <Stack direction={'row'} justifyContent={'space-between'}>\n            <Typography>Course code</Typography>\n            <Typography fontWeight={'bold'}>{session?.question_paper?.course?.code}</Typography>\n          </Stack>\n          <Stack direction={'row'} justifyContent={'space-between'}>\n            <Typography>Department</Typography>\n            <Typography fontWeight={'bold'}>{session?.question_paper?.course?.department?.name}</Typography>\n          </Stack>\n          <Stack flex={1} mt={4}>\n            <Button variant=\"contained\" onClick={() => setIsModalOpen(false)}>\n              Close\n            </Button>\n          </Stack>\n        </Box>\n      </Modal>\n    </>\n  );\n};\n","// material-ui\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// assets\nimport { useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport { GetStartedProcess } from './GetStartedProcess';\nimport { QProcess } from './QProcess';\nimport { Box } from '@mui/system';\nimport { Stack } from '@mui/material';\n\n// avatar style\nconst avatarSX = {\n  width: 36,\n  height: 36,\n  fontSize: '1rem'\n};\n\n// action style\nconst actionSX = {\n  mt: 0.75,\n  ml: 1,\n  top: 'auto',\n  right: 'auto',\n  alignSelf: 'flex-start',\n  transform: 'none'\n};\n\n// ==============================|| DASHBOARD - DEFAULT ||============================== //\n\nconst PAGE_STATE = { GET_STARTED_PROCESS: 'data', QPROCESS: 'qprocess' };\n\nexport default function DashboardDefault() {\n  const { user } = useSelector((state) => state.app);\n  const [currentState, setCurrentState] = useState(PAGE_STATE.GET_STARTED_PROCESS);\n  const [session, setSession] = useState(null);\n\n  const handleNewSession = () => {\n    setCurrentState(PAGE_STATE.GET_STARTED_PROCESS);\n    setSession(null);\n  };\n\n  const handleStartSession = (data) => {\n    setSession(data);\n    setCurrentState(PAGE_STATE.QPROCESS);\n  };\n\n  return (\n    <Grid container rowSpacing={4.5} columnSpacing={2.75}>\n      <Grid item xs={'12'}>\n        <Stack>\n          <Stack sx={{ mt: 2, width: { xs: '100%', sm: '70%', md: '60%' }, height: '100%', alignSelf: 'center' }}>\n            {currentState === PAGE_STATE.QPROCESS ? (\n              <QProcess user={user} session={session} onNewSession={handleNewSession} />\n            ) : (\n              <GetStartedProcess user={user} onCompleted={handleStartSession} />\n            )}\n          </Stack>\n        </Stack>\n      </Grid>\n    </Grid>\n  );\n}\n"],"names":["style","position","top","left","transform","width","minHeight","bgcolor","border","boxShadow","p","icons","law","_jsx","GoLaw","fontSize","business","BiSolidBusiness","science","MdOutlineScience","engineering","MdEngineering","FacultyCard","_ref","data","selected","onPress","_jsxs","Stack","alignItems","children","Card","sx","borderWidth","borderStyle","display","justifyContent","flexDirection","overflow","borderRadius","color","cursor","onClick","icon","Typography","variant","textAlign","mt","name","GetStartedProcess","_ref2","user","onCompleted","faculties","departments","courses","years","useSelector","state","app","departmentFilter","setDepartmentFilter","useState","courseFilter","setCourseFilter","selectedFaculty","setSelectedFaculty","selectedCourse","setSelectedCourse","selectedDepartment","setSelectedDepartment","isModalOpen","setIsModalOpen","year","setYear","yearOfStudy","setYearOfStudy","semester","setSemester","intake","setIntake","loading","setLoading","spacing","Box","Paper","component","xs","sm","InputBase","ml","flex","placeholder","inputProps","Divider","height","m","orientation","IconButton","SearchOutlined","my","px","Grid","container","map","faculty","item","id","filteredDepartment","filter","department","_department$faculty","handleSetFaculty","Modal","open","onClose","FormControl","disabled","InputLabel","Select","value","onChange","e","filteredCourses","course","_course$department","handleSetDepartment","find","dep","target","labelId","label","MenuItem","direction","LoadingButton","fullWidth","async","payload","course_id","year_of_study","request","startSessions","ok","toast","error","preDefinePrompt","QProcess","_session$question_pap2","_session$question_pap3","_session$question_pap4","_session$question_pap5","_session$question_pap6","_session$question_pap7","_session$question_pap8","session","message","setMessage","messages","setMessages","scrollableContainerRef","useRef","handleSendMessage","_request$data","_request$data2","prompt","text","qsession_id","content","sendMessage","current","scrollTop","scrollHeight","detail","console","log","_Fragment","Button","handleViewQuestionPaper","_session$question_pap","question_paper","document","window","startIcon","FileTextOutlined","BookOutlined","ref","overflowY","flexBasis","padding","whiteSpace","ai_response","py","backgroundColor","CircularProgress","size","SendOutlined","fontWeight","code","PAGE_STATE","GET_STARTED_PROCESS","QPROCESS","DashboardDefault","currentState","setCurrentState","setSession","rowSpacing","columnSpacing","md","alignSelf","onNewSession","handleNewSession"],"sourceRoot":""}